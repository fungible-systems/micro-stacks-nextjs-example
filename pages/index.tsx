import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { useAccount, useAuth } from '@micro-stacks/react';
import { GetServerSidePropsContext } from 'next/types';
import { getIronSession } from '../lib/get-iron-session';

interface SerializedAccount {
  appPrivateKey: null | string;
  address: string;
  profile_url: string;
}

type AccountsTuple = [currentAccountIndex: number, accounts: SerializedAccount[]];

type DehydratedState = [
  network: [chainId: number, apiUrl: string],
  accounts: AccountsTuple,
  version: number
];

function cleanDehydratedState(dehydratedState?: string | null) {
  if (!dehydratedState) return null;
  const state = JSON.parse(dehydratedState) as DehydratedState;

  return JSON.stringify([
    state[0],
    [state[1][0], state[1][1].map(account => ({ ...account, appPrivateKey: null }))],
    state[2],
  ]);
}

export async function getServerSideProps(ctx: GetServerSidePropsContext) {
  const { dehydratedState } = await getIronSession(ctx.req, ctx.res);
  console.log('getServerSideProps', dehydratedState);

  return {
    props: {
      dehydratedState: cleanDehydratedState(dehydratedState ?? null),
    },
  };
}

const Home: NextPage = ({ dehydratedState }: any) => {
  console.log(dehydratedState);
  const { isSignedIn, openAuthRequest, signOut } = useAuth();
  const { stxAddress } = useAccount();
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>{isSignedIn ? stxAddress : 'no session'}</p>
        <p className={styles.description}>
          <button onClick={() => (isSignedIn ? signOut() : openAuthRequest())}>
            {isSignedIn ? 'Sign out' : 'Authenticate'}
          </button>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a href="https://github.com/vercel/next.js/tree/canary/examples" className={styles.card}>
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>Instantly deploy your Next.js site to a public URL with Vercel.</p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
